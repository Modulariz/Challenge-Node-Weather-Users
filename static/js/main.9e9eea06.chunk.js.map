{"version":3,"sources":["services/UserContext/UserContext.tsx","services/UserContext/constants.ts","components/Login/LoginForm.tsx","components/Layout/Container.tsx","components/Layout/ContainerCentered.tsx","components/Login/index.tsx","components/Register/RegisterForm.tsx","components/Register/index.tsx","components/ApiDocs/index.tsx","components/Navbar/index.tsx","components/MyKeys/Key.tsx","services/useApiKeys/index.tsx","components/MyKeys/index.tsx","App.tsx","index.tsx"],"names":["usersUri","process","initialUserState","_id","email","__v","initialState","user","token","isLoading","initialContextState","store","dispatch","action","Error","JSON","stringify","reducer","state","type","payload","localStorage","removeItem","UserContext","createContext","UserContextProvider","children","useReducer","useEffect","localToken","getItem","decodedIdentity","jwt","decode","setItem","userDataUri","sub","axios","get","headers","Authorization","then","res","data","catch","err","console","log","finally","userContextValue","useMemo","Provider","value","loginUri","LoginForm","useContext","useForm","register","handleSubmit","errors","formState","setError","useState","isFormLoading","setFormLoadingState","onSubmit","password","request","url","method","message","Box","textAlign","Heading","as","Divider","FormControl","isInvalid","FormErrorMessage","FormLabel","htmlFor","Input","name","ref","required","mt","width","display","flexDirection","justifyContent","alignItems","Button","variantColor","isSubmitting","Spinner","size","variant","to","Container","restProps","ContainerCentered","height","position","top","left","p","bg","rounded","LoginWrapper","registerUri","RegisterForm","history","useHistory","toast","useToast","clearErrors","emailconfirm","passwordconfirm","title","description","status","duration","isClosable","replace","RegisterWrapper","maxW","ApiDocs","clipboard","useClipboard","my","opacity","Text","style","color","fontWeight","flexWrap","Code","IconButton","onClick","copy","aria-label","icon","Navbar","Flex","align","justify","wrap","zIndex","m","Key","apiKey","onDeleteClick","onCopyClick","padding","mr","apikeysUri","useApiKeys","setLoadingState","error","setErrorState","apiKeys","setApiKeys","getApiKeys","useCallback","response","generateApiKey","key","deleteApiKey","id","delete","List","map","length","App","ThemeProvider","theme","CSSReset","exact","path","Login","MyKeys","Register","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e9eea06.chunk.js","sourcesContent":["import React, { createContext, useReducer, useMemo, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { SAVE_TOKEN, SAVE_USER, LOG_OUT, LOADING } from \"./constants\";\r\nimport {\r\n  UserData,\r\n  IUserStoreState,\r\n  IUserContext,\r\n  UserReducerAction,\r\n} from \"./types\";\r\n\r\nconst localapi = process.env.REACT_APP_ROOT_API;\r\nconst usersUri = `${localapi}users/id/`;\r\n\r\nconst initialUserState: UserData = {\r\n  _id: \"\",\r\n  email: \"\",\r\n  __v: 0,\r\n};\r\n\r\nconst initialState: IUserStoreState = {\r\n  user: initialUserState,\r\n  token: \"\",\r\n  isLoading: true,\r\n};\r\n\r\nconst initialContextState: IUserContext = {\r\n  store: initialState,\r\n  dispatch: (action: UserReducerAction) => {\r\n    throw new Error(\r\n      `dispatch no instanciado, intentaste: ${JSON.stringify(action)}`\r\n    );\r\n  },\r\n};\r\n\r\nconst reducer = (state: IUserStoreState, action: UserReducerAction) => {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return { ...state, isLoading: action.payload };\r\n    // SAVE_TOKEN y SAVE_USER se encargan de guardar el token y los datos de usuario en el estado del contexto, respectivamente\r\n    case SAVE_TOKEN:\r\n      return { ...state, token: action.payload };\r\n    case SAVE_USER:\r\n      return { ...state, user: action.payload };\r\n    case LOG_OUT:\r\n      // borra el token del almacenamiento y retorna a defaults el estado del usuario en la app\r\n      localStorage.removeItem(\"token\");\r\n      return { user: initialUserState, token: \"\", isLoading: false };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nexport const UserContext = createContext<IUserContext>(initialContextState);\r\n\r\nexport const UserContextProvider: React.FC = ({ children }) => {\r\n  const [store, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const { token } = store;\r\n\r\n  // Revisar almacenamiento local buscando token\r\n  // Si lo encuentra, lo guarda\r\n  // Si no lo encuentra, desactiva el estado de cargando\r\n  useEffect(() => {\r\n    const localToken = localStorage.getItem(\"token\");\r\n    if (localToken) {\r\n      dispatch({ type: SAVE_TOKEN, payload: localToken });\r\n    } else {\r\n      dispatch({ type: LOADING, payload: false });\r\n    }\r\n  }, [dispatch]);\r\n\r\n  // Si hay cambios en el estado del token, se descodifica y se pide al server info del usuario.\r\n  // Guarda el token en el almacenamiento local, y los datos del usuario en UserContext\r\n  // Desactiva spinner si ya terminó el request o no pudo decodificar el token\r\n  // decodedIdentity.sub es el ID del usuario\r\n  useEffect(() => {\r\n    dispatch({ type: LOADING, payload: true });\r\n    const decodedIdentity = jwt.decode(token);\r\n    if (decodedIdentity) {\r\n      localStorage.setItem(\"token\", token);\r\n      const userDataUri = usersUri + decodedIdentity.sub;\r\n      axios\r\n        .get(userDataUri, { headers: { Authorization: `Bearer ${token}` } })\r\n        .then((res: any) => {\r\n          dispatch({ type: SAVE_USER, payload: res.data });\r\n        })\r\n        .catch((err) => console.log(err))\r\n        .finally(() => dispatch({ type: LOADING, payload: false }));\r\n    } else {\r\n      dispatch({ type: LOADING, payload: false });\r\n    }\r\n  }, [token, dispatch]);\r\n\r\n  const userContextValue = useMemo(() => {\r\n    return { store, dispatch };\r\n  }, [store, dispatch]);\r\n  return (\r\n    <UserContext.Provider value={userContextValue}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n","export const SAVE_TOKEN = \"SAVE_TOKEN\";\r\nexport const SAVE_USER = \"SAVE_USER\";\r\nexport const LOG_OUT = \"LOG_OUT\";\r\nexport const LOADING = \"LOADING\";\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios, { AxiosError } from \"axios\";\r\nimport {\r\n  FormControl,\r\n  Input,\r\n  Button,\r\n  FormLabel,\r\n  Divider,\r\n  Heading,\r\n  Box,\r\n  FormErrorMessage,\r\n  Spinner,\r\n} from \"@chakra-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext, SAVE_TOKEN } from \"../../services/UserContext\";\r\n\r\n// Enlace del server backend, guardado en las variables de entorno.\r\nconst localapi = process.env.REACT_APP_ROOT_API;\r\n// Enlace de login\r\nconst loginUri = `${localapi}users/login`;\r\n\r\n// Formulario de login, se encarga de enviar credenciales al server y recibir token\r\nconst LoginForm: React.FC = () => {\r\n  const { dispatch } = useContext(UserContext);\r\n\r\n  const { register, handleSubmit, errors, formState, setError } = useForm();\r\n\r\n  const [isFormLoading, setFormLoadingState] = useState(false);\r\n\r\n  // Peticion al server, guarda token en UserContext, para ser manejado por LoginWrapper\r\n  const onSubmit = handleSubmit(({ email, password }) => {\r\n    setFormLoadingState(true);\r\n    axios\r\n      .request({\r\n        url: loginUri,\r\n        method: \"POST\",\r\n        data: { email, password },\r\n      })\r\n      .then((res: any) => {\r\n        dispatch({ type: SAVE_TOKEN, payload: res.data.token });\r\n      })\r\n      .catch((err: AxiosError) => {\r\n        setError(\"email\", {\r\n          message: \"El email o la contraseña son invalidos\",\r\n        });\r\n        // eslint-disable-next-line no-console\r\n        console.log(err);\r\n      })\r\n      .finally(() => setFormLoadingState(false));\r\n  });\r\n  return (\r\n    <Box>\r\n      <Box textAlign=\"center\">\r\n        <Heading as=\"h3\">Iniciar Sesión</Heading>\r\n      </Box>\r\n      <Divider />\r\n      <form onSubmit={onSubmit}>\r\n        <FormControl isInvalid={errors.email || errors.password}>\r\n          {errors && errors.email && (\r\n            <FormErrorMessage>{errors.email.message}</FormErrorMessage>\r\n          )}\r\n          <FormLabel htmlFor=\"email\">Email</FormLabel>\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            ref={register({\r\n              required: \"Este campo es requerido.\",\r\n            })}\r\n          />\r\n          <FormLabel htmlFor=\"password\">Contraseña</FormLabel>\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            ref={register({\r\n              required: \"Este campo es requerido.\",\r\n            })}\r\n          />\r\n          <Box\r\n            mt={4}\r\n            width=\"100%\"\r\n            display=\"flex\"\r\n            flexDirection=\"row-reverse\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Button\r\n              variantColor=\"teal\"\r\n              isLoading={formState.isSubmitting}\r\n              type=\"submit\"\r\n            >\r\n              {isFormLoading ? <Spinner size=\"md\" /> : \"Enviar\"}\r\n            </Button>\r\n            <Button variant=\"link\" variantColor=\"teal\">\r\n              <Link to=\"/register\">Registrarse</Link>\r\n            </Button>\r\n          </Box>\r\n        </FormControl>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport { Box, BoxProps } from \"@chakra-ui/core\";\r\n\r\n// se encarga de agregar margenes a los costados de la pagina, de forma responsiva\r\n// uso prop spreading en este caso para poder pasarle mas propiedades a chakra desde afuera\r\nconst Container: React.FC<BoxProps> = ({ children, ...restProps }) => {\r\n  return (\r\n    <Box width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n      <Box\r\n        // eslint-disable-next-line react/jsx-props-no-spreading\r\n        {...restProps}\r\n        width={[\r\n          \"95%\", // base\r\n          \"90%\", // 480px upwards\r\n          \"80%\", // 768px upwards\r\n          \"80%\", // 992px upwards\r\n        ]}\r\n      >\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport { Box } from \"@chakra-ui/core\";\r\n\r\n// se encarga de centrar en la pantalla todos los componentes wrappeados\r\nconst ContainerCentered: React.FC = ({ children }) => {\r\n  return (\r\n    <Box\r\n      width=\"100vw\"\r\n      height=\"90vh\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      position=\"absolute\"\r\n      top=\"0\"\r\n      left=\"0\"\r\n    >\r\n      <Box p=\"20px\" bg=\"white\" rounded=\"md\">\r\n        {children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ContainerCentered;\r\n","import React, { useContext } from \"react\";\r\nimport { Spinner } from \"@chakra-ui/core\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport { UserContext } from \"../../services/UserContext\";\r\nimport { ContainerCentered } from \"../Layout\";\r\n\r\n// Wrapper del formulario Login, se encarga de guardar la informacion del usuario en la sesion, y renderizar condicionalmente la app.\r\nconst LoginWrapper: React.FC = ({ children }) => {\r\n  const {\r\n    store: {\r\n      user: { email },\r\n      isLoading,\r\n    },\r\n  } = useContext(UserContext);\r\n\r\n  // Condicional : Esta cargando?\r\n  // S: renderizar spinner,\r\n  // N: usuario logueado?\r\n  // S: renderizar app,\r\n  // N: renderizar formulario de logueo\r\n\r\n  if (isLoading)\r\n    return (\r\n      <ContainerCentered>\r\n        <Spinner size=\"xl\" />\r\n      </ContainerCentered>\r\n    );\r\n  if (email) return <>{children}</>;\r\n  return (\r\n    <ContainerCentered>\r\n      <LoginForm />\r\n    </ContainerCentered>\r\n  );\r\n};\r\n\r\nexport default LoginWrapper;\r\n","import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport {\r\n  FormControl,\r\n  Input,\r\n  Button,\r\n  FormLabel,\r\n  Divider,\r\n  Heading,\r\n  Box,\r\n  FormErrorMessage,\r\n  Spinner,\r\n  useToast,\r\n} from \"@chakra-ui/core\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\n// Enlace del server backend, guardado en las variables de entorno.\r\nconst localapi = process.env.REACT_APP_ROOT_API;\r\n// Enlace de registro de usuarios\r\nconst registerUri = `${localapi}users/`;\r\n\r\n// Formulario de registro de usuarios, se encarga de enviar credenciales al server para ser almacenadas\r\nconst RegisterForm: React.FC = () => {\r\n  const history = useHistory();\r\n\r\n  const toast = useToast();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    formState,\r\n    setError,\r\n    clearErrors,\r\n  } = useForm();\r\n\r\n  const [isFormLoading, setFormLoadingState] = useState(false);\r\n\r\n  // Peticion al server, guarda token en UserContext, para ser manejado por LoginWrapper\r\n  const onSubmit = handleSubmit(\r\n    ({ email, emailconfirm, passwordconfirm, password }) => {\r\n      clearErrors();\r\n      if (email !== emailconfirm) {\r\n        setError(\"email\", { message: \"Los campos de email no coinciden.\" });\r\n      }\r\n      if (password !== passwordconfirm) {\r\n        setError(\"password\", {\r\n          message: \"Los campos de contraseña no coinciden.\",\r\n        });\r\n      }\r\n      setFormLoadingState(true);\r\n      axios\r\n        .request({\r\n          url: registerUri,\r\n          method: \"POST\",\r\n          data: { email, password },\r\n        })\r\n        .then((res: AxiosResponse) => {\r\n          toast({\r\n            title: \"Cuenta creada!\",\r\n            description: \"Probá iniciar sesión.\",\r\n            status: \"success\",\r\n            duration: 9000,\r\n            isClosable: true,\r\n          });\r\n          history.replace(\"/keys\");\r\n        })\r\n        .catch((err: AxiosError) => {\r\n          setError(\"email\", {\r\n            message: \"Este email ya está en uso.\",\r\n          });\r\n          setFormLoadingState(false);\r\n          // eslint-disable-next-line no-console\r\n          console.log(err);\r\n        });\r\n    }\r\n  );\r\n  return (\r\n    <Box>\r\n      <Box textAlign=\"center\">\r\n        <Heading as=\"h3\">Registrarse</Heading>\r\n      </Box>\r\n      <Divider />\r\n      <form onSubmit={onSubmit}>\r\n        <FormControl isInvalid={errors.email || errors.password}>\r\n          {errors && errors.email && (\r\n            <FormErrorMessage>{errors.email.message}</FormErrorMessage>\r\n          )}\r\n          {errors && errors.password && (\r\n            <FormErrorMessage>{errors.password.message}</FormErrorMessage>\r\n          )}\r\n          <FormLabel htmlFor=\"email\">Email</FormLabel>\r\n          <Input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            ref={register({\r\n              required: \"Falta completar datos de email.\",\r\n            })}\r\n          />\r\n          <FormLabel htmlFor=\"emailconfirm\">Confirmar Email</FormLabel>\r\n          <Input\r\n            type=\"email\"\r\n            name=\"emailconfirm\"\r\n            ref={register({\r\n              required: \"Falta completar datos de email.\",\r\n            })}\r\n          />\r\n          <FormLabel htmlFor=\"password\">Contraseña</FormLabel>\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            ref={register({\r\n              required: \"Falta completar datos de contraseña.\",\r\n            })}\r\n          />\r\n          <FormLabel htmlFor=\"passwordconfirm\">Confirmar Contraseña</FormLabel>\r\n          <Input\r\n            type=\"password\"\r\n            name=\"passwordconfirm\"\r\n            ref={register({\r\n              required: \"Falta completar datos de contraseña.\",\r\n            })}\r\n          />\r\n          <Box\r\n            mt={4}\r\n            width=\"100%\"\r\n            display=\"flex\"\r\n            flexDirection=\"row-reverse\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Button\r\n              variantColor=\"teal\"\r\n              isLoading={formState.isSubmitting}\r\n              type=\"submit\"\r\n            >\r\n              {isFormLoading ? <Spinner size=\"md\" /> : \"Enviar\"}\r\n            </Button>\r\n            <Button variant=\"link\" variantColor=\"teal\">\r\n              <Link to=\"/keys\">Iniciar Sesión</Link>\r\n            </Button>\r\n          </Box>\r\n        </FormControl>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import { Spinner } from \"@chakra-ui/core\";\r\nimport React, { useContext } from \"react\";\r\nimport { UserContext } from \"../../services/UserContext\";\r\nimport { Container, ContainerCentered } from \"../Layout\";\r\nimport RegisterForm from \"./RegisterForm\";\r\n\r\n// Wrapper del formulario Login, se encarga de guardar la informacion del usuario en la sesion, y renderizar condicionalmente la app.\r\nconst RegisterWrapper: React.FC = () => {\r\n  const {\r\n    store: {\r\n      user: { email },\r\n      isLoading,\r\n    },\r\n  } = useContext(UserContext);\r\n\r\n  if (isLoading)\r\n    return (\r\n      <ContainerCentered>\r\n        <Spinner size=\"xl\" />\r\n      </ContainerCentered>\r\n    );\r\n  if (email) return <></>;\r\n  return (\r\n    <Container p=\"20px\" bg=\"white\" rounded=\"md\" mt=\"20px\" maxW=\"400px\">\r\n      <RegisterForm />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegisterWrapper;\r\n","import React from \"react\";\r\nimport {\r\n  Text,\r\n  Heading,\r\n  Divider,\r\n  Box,\r\n  Code,\r\n  useToast,\r\n  IconButton,\r\n} from \"@chakra-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useClipboard } from \"use-clipboard-copy\";\r\nimport { Container } from \"../Layout\";\r\n\r\nconst ApiDocs: React.FC = () => {\r\n  const clipboard = useClipboard();\r\n  const toast = useToast();\r\n  const copyToClipboard = (data: string) => {\r\n    clipboard.copy(data);\r\n    toast({\r\n      title: \"Endpoint copiado al portapapeles!\",\r\n      description: \"No te olvides de cambiar todo lo rojo por tus datos.\",\r\n      status: \"success\",\r\n      duration: 9000,\r\n      isClosable: true,\r\n    });\r\n  };\r\n  return (\r\n    <Container p=\"20px\" bg=\"white\" rounded=\"md\" my=\"5px\">\r\n      <Heading as=\"h1\" size=\"xl\">\r\n        Datos meteorológicos al azar\r\n      </Heading>\r\n      <Divider />\r\n      <Heading as=\"h2\" size=\"md\">\r\n        Acceda a datos metereológicos simulados, de cualquier ciudad del mundo.\r\n      </Heading>\r\n      <Heading as=\"h3\" size=\"md\">\r\n        Esta api es un clon de openweather que usa una base de datos de las\r\n        ciudades del mundo con sus coordenadas, pero devuelve datos climáticos\r\n        azarosos.\r\n      </Heading>\r\n      <Divider />\r\n      <Heading as=\"h4\" size=\"xl\">\r\n        Obtener datos metereológicos de una ciudad\r\n      </Heading>\r\n      <Divider opacity={0} />\r\n      <Text>\r\n        La consulta se hace por nombre de ciudad. Vas a necesitar una api key\r\n        para hacer esta petición, para obtener una debes ir al panel de{\" \"}\r\n        <Link to=\"/keys\" style={{ color: \"teal\", fontWeight: \"bold\" }}>\r\n          Mis Llaves\r\n        </Link>\r\n      </Text>\r\n      <Divider opacity={0} />\r\n      <Box display=\"flex\" flexWrap=\"wrap\">\r\n        <Code>{\"https://node-weather-challenge.herokuapp.com/weather?q=\"}</Code>\r\n        <Code variantColor=\"red\">{\"Ciudad\"}</Code>\r\n        <Code>{\"&appid=\"}</Code>\r\n        <Code variantColor=\"red\">{\"API key\"}</Code>\r\n        <IconButton\r\n          onClick={() =>\r\n            copyToClipboard(\r\n              \"https://node-weather-challenge.herokuapp.com/weather?q=Ciudad&appid=API key\"\r\n            )\r\n          }\r\n          aria-label=\"delete api key\"\r\n          icon=\"copy\"\r\n          variant=\"ghost\"\r\n          variantColor=\"teal\"\r\n        />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ApiDocs;\r\n","import React, { useContext } from \"react\";\r\nimport { Button, Flex } from \"@chakra-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container } from \"../Layout\";\r\nimport { LOG_OUT, UserContext } from \"../../services/UserContext\";\r\n\r\nconst Navbar: React.FC = () => {\r\n  const {\r\n    store: {\r\n      user: { email },\r\n    },\r\n    dispatch,\r\n  } = useContext(UserContext);\r\n  return (\r\n    <Flex\r\n      as=\"nav\"\r\n      align=\"center\"\r\n      justify=\"space-between\"\r\n      wrap=\"wrap\"\r\n      bg=\"teal.500\"\r\n      color=\"white\"\r\n      position=\"sticky\"\r\n      top={0}\r\n      left={0}\r\n      width=\"100%\"\r\n      zIndex={3}\r\n    >\r\n      <Container display=\"flex\" justifyContent=\"right\">\r\n        <Button variant=\"link\" m=\"15px\" variantColor=\"white\">\r\n          <Link to=\"/\">Docs</Link>\r\n        </Button>\r\n        <Button variant=\"link\" m=\"15px\" variantColor=\"white\">\r\n          <Link to=\"/keys\">{email ? \"Mis Llaves\" : \"Iniciar Sesión\"}</Link>\r\n        </Button>\r\n        {email ? (\r\n          <Button\r\n            variant=\"link\"\r\n            m=\"15px\"\r\n            variantColor=\"white\"\r\n            onClick={() => dispatch({ type: LOG_OUT, payload: null })}\r\n          >\r\n            Cerrar Sesión\r\n          </Button>\r\n        ) : (\r\n          <Button variant=\"link\" m=\"15px\" variantColor=\"white\">\r\n            <Link to=\"/register\">Registrarse</Link>\r\n          </Button>\r\n        )}\r\n      </Container>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Box, IconButton, Code } from \"@chakra-ui/core\";\r\n\r\ninterface IKeyProps {\r\n  apiKey: string;\r\n  onDeleteClick: () => void;\r\n  onCopyClick: () => void;\r\n}\r\n\r\nconst Key: React.FC<IKeyProps> = ({ apiKey, onDeleteClick, onCopyClick }) => {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\" padding=\"5px\">\r\n      <Code mr=\"5px\">{apiKey} </Code>\r\n      <IconButton\r\n        onClick={() => onCopyClick()}\r\n        aria-label=\"delete api key\"\r\n        icon=\"copy\"\r\n        variant=\"ghost\"\r\n        variantColor=\"teal\"\r\n      />\r\n      <IconButton\r\n        onClick={() => onDeleteClick()}\r\n        aria-label=\"delete api key\"\r\n        icon=\"delete\"\r\n        variant=\"ghost\"\r\n        variantColor=\"red\"\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Key;\r\n","import { useEffect, useState, useCallback } from \"react\";\r\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { useToast } from \"@chakra-ui/core\";\r\nimport { ApiKey, WeatherAPIError } from \"./types\";\r\n\r\nconst localapi = process.env.REACT_APP_ROOT_API;\r\nconst apikeysUri = `${localapi}apikeys`;\r\n\r\nconst useApiKeys = (\r\n  token: string\r\n): {\r\n  isLoading: boolean;\r\n  error: WeatherAPIError | null;\r\n  apiKeys: ApiKey[] | null;\r\n  generateApiKey: () => void;\r\n  deleteApiKey: (id: string) => void;\r\n} => {\r\n  const toast = useToast();\r\n\r\n  const [isLoading, setLoadingState] = useState(false);\r\n\r\n  const [error, setErrorState] = useState<WeatherAPIError | null>(null);\r\n\r\n  const [apiKeys, setApiKeys] = useState<ApiKey[] | null>(null);\r\n\r\n  const getApiKeys = useCallback(() => {\r\n    setLoadingState(true);\r\n    axios\r\n      .get(apikeysUri, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res: AxiosResponse<ApiKey[]>) => {\r\n        setApiKeys(res.data);\r\n        setErrorState(null);\r\n      })\r\n      .catch((err: AxiosError<WeatherAPIError>) => {\r\n        if (err.response) setErrorState(err.response.data);\r\n      })\r\n      .finally(() => setLoadingState(false));\r\n  }, [token]);\r\n\r\n  const generateApiKey = useCallback(() => {\r\n    axios\r\n      .request({\r\n        method: \"POST\",\r\n        url: apikeysUri,\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((res: AxiosResponse<ApiKey>) =>\r\n        toast({\r\n          title: \"Llave generada!\",\r\n          description: res.data.key,\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        })\r\n      )\r\n      .catch((err: AxiosError<WeatherAPIError>) => {\r\n        if (err.response)\r\n          toast({\r\n            title: \"Oops!\",\r\n            description:\r\n              \"Ha habido un error generando una llave. Intentalo mas tarde!\",\r\n            status: \"error\",\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n      })\r\n      .finally(() => getApiKeys());\r\n  }, [getApiKeys, toast, token]);\r\n\r\n  const deleteApiKey = useCallback(\r\n    (id: string) => {\r\n      axios\r\n        .delete(`${apikeysUri}/${id}`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((res: AxiosResponse<ApiKey>) =>\r\n          toast({\r\n            title: \"Llave eliminada\",\r\n            description: res.data.key,\r\n            status: \"info\",\r\n            duration: 3000,\r\n            isClosable: true,\r\n          })\r\n        )\r\n        .catch((err: AxiosError<WeatherAPIError>) => {\r\n          if (err.response)\r\n            toast({\r\n              title: \"Oops!\",\r\n              description:\r\n                \"Ha habido un error eliminando una llave. Intentalo mas tarde!\",\r\n              status: \"error\",\r\n              duration: 3000,\r\n              isClosable: true,\r\n            });\r\n        })\r\n        .finally(() => getApiKeys());\r\n    },\r\n    [getApiKeys, toast, token]\r\n  );\r\n\r\n  useEffect(() => {\r\n    getApiKeys();\r\n  }, [getApiKeys]);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast({\r\n        title: \"Oops!\",\r\n        description: \"Ha habido un obteniendo tus llaves. Intentalo mas tarde!\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  }, [error, toast]);\r\n\r\n  return { apiKeys, isLoading, error, generateApiKey, deleteApiKey };\r\n};\r\n\r\nexport default useApiKeys;\r\n","import {\r\n  Divider,\r\n  Heading,\r\n  List,\r\n  ListItem,\r\n  Button,\r\n  Spinner,\r\n  Text,\r\n  useToast,\r\n} from \"@chakra-ui/core\";\r\nimport React, { useContext } from \"react\";\r\nimport { useClipboard } from \"use-clipboard-copy\";\r\nimport { Container } from \"../Layout\";\r\nimport Key from \"./Key\";\r\nimport useApiKeys from \"../../services/useApiKeys\";\r\nimport { ApiKey } from \"../../services/useApiKeys/types\";\r\nimport { UserContext } from \"../../services/UserContext\";\r\n\r\nconst ApiDocs: React.FC = () => {\r\n  const {\r\n    store: { token },\r\n  } = useContext(UserContext);\r\n  const {\r\n    isLoading,\r\n    apiKeys,\r\n    error,\r\n    generateApiKey,\r\n    deleteApiKey,\r\n  } = useApiKeys(token);\r\n  const toast = useToast();\r\n  const clipboard = useClipboard();\r\n  const copyToClipboard = (data: string) => {\r\n    clipboard.copy(data);\r\n    toast({\r\n      title: \"Llave copiada al portapapeles!\",\r\n      description: \"A programar se ha dicho.\",\r\n      status: \"success\",\r\n      duration: 9000,\r\n      isClosable: true,\r\n    });\r\n  };\r\n  return (\r\n    <Container p=\"20px\" bg=\"white\" rounded=\"md\" my=\"5px\">\r\n      <Heading as=\"h1\" size=\"xl\">\r\n        Mis Llaves\r\n      </Heading>\r\n      <Divider />\r\n      <Heading as=\"h2\" size=\"md\">\r\n        Con estas llaves, o keys, vas a tener acceso a la api, podes generar\r\n        cuantas quieras y revocarlas en cualquier momento.\r\n      </Heading>\r\n      <Divider />\r\n      <Button variantColor=\"teal\" onClick={generateApiKey}>\r\n        Generar una Nueva Llave\r\n      </Button>\r\n      <Divider opacity={0} />\r\n      <Heading as=\"h3\" size=\"sm\">\r\n        Llaves:\r\n      </Heading>\r\n      {isLoading && <Spinner size=\"lg\" />}\r\n      {!isLoading && !error && apiKeys && (\r\n        <List as=\"ul\">\r\n          {apiKeys.map((key: ApiKey) => (\r\n            <ListItem>\r\n              <Key\r\n                apiKey={key.key}\r\n                onDeleteClick={() => deleteApiKey(key._id)}\r\n                onCopyClick={() => copyToClipboard(key.key)}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      )}\r\n      {apiKeys && apiKeys.length === 0 && (\r\n        <Text>\r\n          Parece que no has generado ninguna llave... Apretá ese boton verde\r\n          gigante!\r\n        </Text>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ApiDocs;\r\n","import React from \"react\";\r\nimport { CSSReset, ThemeProvider, theme } from \"@chakra-ui/core\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport LoginWrapper from \"./components/Login\";\r\nimport { UserContextProvider } from \"./services/UserContext\";\r\nimport Register from \"./components/Register\";\r\nimport ApiDocs from \"./components/ApiDocs\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport MyKeys from \"./components/MyKeys\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <UserContextProvider>\r\n      <ThemeProvider theme={theme}>\r\n        <CSSReset />\r\n        <Router>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <ApiDocs />\r\n            </Route>\r\n            <Route path=\"/keys\">\r\n              <LoginWrapper>\r\n                <MyKeys />\r\n              </LoginWrapper>\r\n            </Route>\r\n            <Route path=\"/register\">\r\n              <Register />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </UserContextProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}